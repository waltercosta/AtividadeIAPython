# -*- coding: utf-8 -*-
"""KNeighborsClassifier.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ICeueGuUI4T8_LyYWOL4dJbX42z8Mpbs
"""

from google.colab import drive
drive.mount('/content/drive')

import nltk
nltk.download()

#Importando o pandas
import pandas as pd
base = pd.read_csv('./drive/My Drive/Colab Notebooks/Sentiment.csv', sep = ',')
base.head()
print(base.columns)

#Checando se possui algum valor mulo
base.isnull().sum()

#Verificando o quantitativo dos indicadores
base['sentiment'].value_counts()

#Divis√£o da base em treino e teste, sendo 30% para teste, e 70% para treinamento
from sklearn.model_selection import train_test_split
preditor = base['text']
classe = base['sentiment']
preditor_tr, preditor_te, classe_tr, classe_te = train_test_split(preditor, classe, test_size = 0.3, random_state = 0)

from sklearn.pipeline import Pipeline
from sklearn.feature_extraction.text import TfidfVectorizer

from sklearn.neighbors import KNeighborsClassifier
titulo_model = Pipeline([('tfidf', TfidfVectorizer()), ('clf',
                                           KNeighborsClassifier())])
titulo_model.fit(preditor_tr, classe_tr)

predicao_kn = titulo_model.predict(preditor_te)

from sklearn import metrics
print(metrics.confusion_matrix(classe_te, predicao_kn))

print(metrics.classification_report(classe_te, predicao_kn))

print(metrics.accuracy_score(classe_te, predicao_kn))